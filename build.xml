<?xml version="1.0" encoding="UTF-8"?>
<project name="dANN Examples" default="all" basedir=".">

    <path id="classpath.ant">
        <fileset dir="lib/ant" includes="**/*.jar"/>
		<fileset dir="lib" includes="dann.jar"/>
        <fileset dir="../java_dann/build/jar" includes="dann.jar"/>
    </path>
    <path id="classpath.build">
        <fileset dir="lib/build" includes="**/*.jar"/>
		<fileset dir="lib" includes="dann.jar"/>
        <fileset dir="../java_dann/build/jar" includes="dann.jar"/>
    </path>
	<path id="classpath.build.tests">
		<fileset dir="lib/build" includes="**/*.jar"/>
		<fileset dir="lib" includes="dann.jar"/>
        <fileset dir="../java_dann/build/jar" includes="dann.jar"/>
		<pathelement path="build/classes"/>
	</path>
    <path id="classpath.test">
        <fileset dir="lib/test" includes="**/*.jar"/>
		<fileset dir="lib" includes="dann.jar"/>
        <fileset dir="../java_dann/build/jar" includes="**/dann.jar"/>
		<fileset dir="build/jar" includes="dann_examples.jar"/>
        <fileset dir="build/jar" includes="dann_examples-tests.jar"/>
    </path>
    <path id="classpath.run">
        <fileset dir="lib/run" includes="**/*.jar"/>
		<fileset dir="lib" includes="dann.jar"/>
        <fileset dir="../java_dann/build/jar" includes="dann.jar"/>
		<fileset  dir="build/jar" includes="dann_examples.jar"/>
    </path>

	<taskdef name="lint4j" classname="com.jutils.lint4j.ant.Lint4jAntTask">
		<classpath>
			<fileset dir="lib/ant/lint">
				<include name="**/*.jar"/>
			</fileset>
		</classpath>
	</taskdef>
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
		<classpath>
			<fileset dir="lib/ant/findbugs">
				<include name="**/*.jar"/>
			</fileset>
		</classpath>
	</taskdef>
	<taskdef name="checkstyle" classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
		<classpath>
			<fileset dir="lib/ant/checkstyle">
				<include name="**/*.jar"/>
			</fileset>
		</classpath>
	</taskdef>
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
		<classpath>
			<fileset dir="lib/ant/pmd">
				<include name="**/*.jar"/>
			</fileset>
		</classpath>
	</taskdef>


    <target name="clean" description="Cleans the build environment">
        <delete dir="build"/>
    </target>


    <target name="javadoc" description="Generate javadocs from code">
        <mkdir dir="build/javadoc"/>
        <delete includeemptydirs="true">
            <fileset dir="build/javadoc" includes="**/*"/>
        </delete>
        <javadoc Private="true" destdir="build/javadoc/" classpathref="classpath.build">
            <fileset dir="src/main/java/" includes="**/*.java"/>
        </javadoc>
    </target>


	<target name="lint" description="Perform lint checks">
		<mkdir dir="build/lint"/>
		<lint4j packages="com.syncleus.*" level="5">
			<sourcepath>
				<dirset dir="src/main/java">
					<include name="**/*.java" />
				</dirset>
				<pathelement path="src/main/java/" />
				<dirset dir="src/test/java">
					<include name="**/*.java" />
				</dirset>
				<pathelement path="src/testjava/" />
			</sourcepath>
			<classpath refid="classpath.build"/>
			<formatters>
				<formatter type="text" />
				<formatter type="xml" toFile="build/lint/all.xml"/>
			</formatters>
		</lint4j>
	</target>


    <target name="compile" description="compile class files">
        <mkdir dir="build/classes"/>
        <javac destdir="build/classes" classpathref="classpath.build" debug="true">
            <compilerarg value="-Xlint:deprecation"/>
            <!--compilerarg value="-Xlint:unchecked"/-->
            <src path="src/main/java"/>
        </javac>
		<copy file="src/main/resources/log4j.xml" todir="build/classes"/>
        <mkdir dir="build/jar"/>
		<manifestclasspath property="manifest.classpath" jarfile="./dann_examples.jar" maxParentLevels="100">
			<!-- TODO this isnt correct -->
			<classpath refid="classpath.run" />
		</manifestclasspath>
        <jar destfile="build/jar/dann_examples.jar" basedir="build/classes">
            <manifest>
                <attribute name="Main-Class" value="com.syncleus.core.dann.examples.Main"/>
				<attribute name="Class-Path" value="${manifest.classpath}"/>
				<attribute name="Product-Name" value="dANN"/>
				<attribute name="Package-Title" value="com.syncleus.dann"/>
				<attribute name="Package-Version" value="2.0"/>
				<attribute name="Specification-Title" value="An Artificial Intelligence library."/>
				<attribute name="Specification-Vendor" value="Syncleus, Inc."/>
				<attribute name="Specification-Version" value="2.0"/>
				<attribute name="Implementation-Title" value="An Artificial Intelligence library."/>
				<attribute name="Implementation-Vendor" value="Syncleus, Inc."/>
				<attribute name="Implementation-Vendor-Id" value="com.syncleus.dann"/>
				<attribute name="Implementation-Version" value="2.0"/>
            </manifest>
        </jar>
		
        <mkdir dir="build/tests/classes"/>
        <javac destdir="build/tests/classes" classpathref="classpath.build.tests" debug="true">
            <compilerarg value="-Xlint:deprecation"/>
            <!--compilerarg value="-Xlint:unchecked"/-->
            <src path="src/test/java"/>
        </javac>
		<copy file="src/main/resources/log4j.xml" todir="build/tests/classes"/>
        <mkdir dir="build/jar"/>
        <jar destfile="build/jar/dann_examples-tests.jar" basedir="build/tests/classes">
            <manifest>
                <attribute name="Main-Class" value="com.syncleus.core.dann.examples.Main"/>
				<attribute name="Class-Path" value="${manifest.classpath}"/>
				<attribute name="Product-Name" value="dANN"/>
				<attribute name="Package-Title" value="com.syncleus.dann"/>
				<attribute name="Package-Version" value="2.0"/>
				<attribute name="Specification-Title" value="An Artificial Intelligence library."/>
				<attribute name="Specification-Vendor" value="Syncleus, Inc."/>
				<attribute name="Specification-Version" value="2.0"/>
				<attribute name="Implementation-Title" value="An Artificial Intelligence library."/>
				<attribute name="Implementation-Vendor" value="Syncleus, Inc."/>
				<attribute name="Implementation-Vendor-Id" value="com.syncleus.dann"/>
				<attribute name="Implementation-Version" value="2.0"/>
            </manifest>
        </jar>
    </target>


    <target name="compile-warnings" description="compile class files and display all warnings">
        <mkdir dir="build/classes"/>
        <javac destdir="build/classes" classpathref="classpath.build" debug="true">
            <compilerarg value="-Xlint"/>
            <src path="src/main/java"/>
        </javac>
		<copy file="src/main/resources/log4j.xml" todir="build/classes"/>
        <mkdir dir="build/jar"/>
		<manifestclasspath property="manifest.classpath" jarfile="./dann_examples.jar" maxParentLevels="100">
			<classpath refid="classpath.run" />
		</manifestclasspath>
        <jar destfile="build/jar/dann_examples.jar" basedir="build/classes">
            <manifest>
                <attribute name="Main-Class" value="com.syncleus.core.dann.examples.Main"/>
				<attribute name="Class-Path" value="${manifest.classpath}"/>
				<attribute name="Product-Name" value="dANN"/>
				<attribute name="Package-Title" value="com.syncleus.dann"/>
				<attribute name="Package-Version" value="2.0"/>
				<attribute name="Specification-Title" value="An Artificial Intelligence library."/>
				<attribute name="Specification-Vendor" value="Syncleus, Inc."/>
				<attribute name="Specification-Version" value="2.0"/>
				<attribute name="Implementation-Title" value="An Artificial Intelligence library."/>
				<attribute name="Implementation-Vendor" value="Syncleus, Inc."/>
				<attribute name="Implementation-Vendor-Id" value="com.syncleus.dann"/>
				<attribute name="Implementation-Version" value="2.0"/>
            </manifest>
        </jar>

        <mkdir dir="build/tests/classes"/>
        <javac destdir="build/tests/classes" classpathref="classpath.build.tests" debug="true">
            <compilerarg value="-Xlint"/>
            <src path="src/test/java"/>
        </javac>
		<copy file="src/main/resources/log4j.xml" todir="build/tests/classes"/>
        <mkdir dir="build/jar"/>
        <jar destfile="build/jar/dann_examples-tests.jar" basedir="build/tests/classes">
            <manifest>
                <attribute name="Main-Class" value="com.syncleus.core.dann.examples.Main"/>
				<attribute name="Class-Path" value="${manifest.classpath}"/>
				<attribute name="Product-Name" value="dANN"/>
				<attribute name="Package-Title" value="com.syncleus.dann"/>
				<attribute name="Package-Version" value="2.0"/>
				<attribute name="Specification-Title" value="An Artificial Intelligence library."/>
				<attribute name="Specification-Vendor" value="Syncleus, Inc."/>
				<attribute name="Specification-Version" value="2.0"/>
				<attribute name="Implementation-Title" value="An Artificial Intelligence library."/>
				<attribute name="Implementation-Vendor" value="Syncleus, Inc."/>
				<attribute name="Implementation-Vendor-Id" value="com.syncleus.dann"/>
				<attribute name="Implementation-Version" value="2.0"/>
            </manifest>
        </jar>
    </target>

    <target name="all" description="clean, javadoc, then compile">
        <antcall target="clean"/>
        <antcall target="javadoc"/>
        <antcall target="compile"/>
    </target>

    <target name="run" description="run the application after it has been built">
        <java fork="true" classname="com.syncleus.core.dann.examples.Main">
            <jvmarg value="-Xmx512m" />
            <classpath refid="classpath.run"/>
        </java>
    </target>

	<!-- TODO remove this target as well as the code it runs -->
    <target name="run-tests" description="this is a temporary target that will be removed, tests some experimental code">
        <java fork="true" classname="com.syncleus.core.dann.examples.test.Test3d">
            <jvmarg value="-Xmx512m" />
            <classpath refid="classpath.test"/>
        </java>
    </target>

	<!-- TODO this shouldnt be netbeans specific -->
    <target name="profile" description="run the netbeans profiler on this application as it runs">
        <nbprofiledirect>
            <classpath>
                <path refid="classpath.run"/>
                <path location="build/jar/dann_examples.jar"/>
            </classpath>
        </nbprofiledirect>
        <java fork="true" classname="com.syncleus.core.dann.examples.Main">
            <jvmarg value="${profiler.info.jvmargs.agent}"/>
            <jvmarg value="-Xmx512m" />
            <classpath refid="classpath.run"/>
        </java>
    </target>

	<!-- TODO remove org.jDesktop.* as a dependency -->
	<target name="findbugs" description="run findbugs check on built jar writing output to a log file">
		<mkdir dir="build/findbugs"/>
		<findbugs home="lib/ant/findbugs/"
				  output="xml"
				  outputFile="build/findbugs/findbugs-report.xml" >
			<auxClasspath path="lib/run/java3d/j3dcore.jar"/>
			<auxClasspath path="lib/run/java3d/freehep/freehep-j3d.jar"/>
			<auxClasspath path="lib/run/java3d/j3dutils.jar"/>
			<auxClasspath path="lib/run/java3d/vecmath.jar"/>
			<auxClasspath path="lib/test/junit/junit-4.6.jar"/>
			<auxClasspath path="lib/test/junit/fest/fest-swing-1.2a2.jar"/>
			<auxClasspath path="lib/test/junit/fest/fest-reflect-1.1.jar"/>
			<auxClasspath path="lib/run/jaxb/jaxb2-basics-runtime-0.5.3.jar"/>
			<auxClasspath path="lib/run/log4j/log4j-1.2.15.jar"/>
			<auxClasspath path="../java_dann/build/jar/dann.jar"/>
			<sourcePath path="src/main/java/" />
			<sourcePath path="src/test/java/" />
			<class location="build/jar/dann_examples.jar" />
		</findbugs>
	</target>

	<target name="checkstyle" description="run checkstyle checks on the source code">
		<mkdir dir="build/checkstyle"/>
		<checkstyle config="src/main/resources/checks.xml" maxErrors="2147483647">
			<fileset dir="src/main/java" includes="**/*.java"/>
			<fileset dir="src/test/java" includes="**/*.java"/>
			<formatter type="plain"/>
			<formatter type="xml" toFile="build/checkstyle/checkstyle-report.xml"/>
		</checkstyle>
	</target>

	<target name="pmd" description="run pmd checks on the source code">
		<mkdir dir="build/pmd"/>
		<pmd rulesetfiles="src/main/resources/pmd.xml">
			<formatter type="xml" toFile="build/pmd/pmd-report.xml"/>
			<fileset dir="src/main/java/">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="src/test/java/">
				<include name="**/*.java"/>
			</fileset>
		</pmd>
	</target>

	<target name="tests" description="run all unit tests without generating coverage information">
		<mkdir dir="build/tests"/>
		<junit printsummary="yes" haltonfailure="no" showoutput="yes" >
			<classpath refid="classpath.test"/>
			<formatter type="xml"/>
			<batchtest fork="yes" todir="build/tests">
				<fileset dir="src/test/java">
					<include name="com/syncleus/**/Test*.java"/>
					<exclude name="**/AllTests.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

</project>
